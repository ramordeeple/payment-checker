// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/cbr": {
            "get": {
                "description": "Returns the rate for a given currency and date from the mock CBR service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cbr"
                ],
                "summary": "Get currency rate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Currency code",
                        "name": "currency",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date in YYYY-MM-DD format",
                        "name": "date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpapi.CBRRateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Rate not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/validate": {
            "post": {
                "description": "Validates a payment request with amount, currency, and date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "Validate foreign payment",
                "parameters": [
                    {
                        "description": "Payment request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpapi.ValidatePaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpapi.ValidatePaymentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httpapi.CBRRateResponse": {
            "type": "object",
            "properties": {
                "char_code": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "nominal": {
                    "type": "integer"
                },
                "value_scaled": {
                    "type": "integer"
                }
            }
        },
        "httpapi.ValidatePaymentRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "currency": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                }
            }
        },
        "httpapi.ValidatePaymentResponse": {
            "type": "object",
            "properties": {
                "allowed": {
                    "type": "boolean"
                },
                "reason": {
                    "type": "string"
                },
                "totalRUBInKopecks": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	//LeftDelim:        "{{",
	//RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
